plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'org.jetbrains.gradle.plugin.idea-ext' version '0.7'
}

sourceCompatibility = 1.17
targetCompatibility = 1.17

archivesBaseName = project.archives_base_name
version = project.mod_version+"+"+project.minecraft_version

repositories {
	maven { url = "https://maven.fabricmc.net/" }
	maven { url = "https://jitpack.io" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://server.bbkr.space/artifactory/libs-release" }
	
	flatDir {
	  dirs "libs"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//modImplementation "io.github.prospector:modmenu:${project.mod_menu_version}"
	modImplementation ("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}") { exclude(module: "ModMenu") }
	implementation 'org.jetbrains:annotations:15.0'
	compileOnly "com.google.code.findbugs:jsr305:3.0.2"
	
	//modImplementation "ninjaphenix.ninjatips:NinjaTips:1.0.31.15"
	//modImplementation "java.io.github.giantnuker.fabric.tooltipwrap:tooltipwrap:1.0.2"
	modImplementation "com.github.Vexatos:Flamingo:${project.flamingo_version}"
	/*
	modImplementation "io.github.cottonmc:LibDP:${project.libcd_version}"
	modImplementation "io.github.cottonmc:Parchment:${project.parchment_version}"
	modImplementation "com.github.lambdaurora:spruceui:${project.spruceui_version}"
	modImplementation "com.github.lambdaurora.LambdaControls:fabric:${project.lambdacontrols_version}"
	*/
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}


tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE.md"
}

idea.project.settings {
    delegateActions {
        delegateBuildRunToGradle = false
        testRunner = org.jetbrains.gradle.ext.ActionDelegationConfig.TestRunner.PLATFORM
    }
}